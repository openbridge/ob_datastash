####################### INPUT ############################
# An input enables a specific source of
# events to be read by Logstash.
##########################################################

input {
  file {
     type => "set-type-as-your-table-name"
     path => "/data/*.csv"
     start_position => "beginning"
     sincedb_path => "/dev/null"
  }
}

####################### FILTER ###########################
# A filter performs intermediary processing on an event.
# Filters are often applied conditionally depending on the
# characteristics of the event.
##########################################################

filter {

# The CSV filter takes an event field containing CSV data,
# parses it, and stores it as individual fields (can optionally specify the names).
# This filter can also parse data with any separator, not just commas.

  csv {
     separator => ","
     quote_char => '"'
     autodetect_column_names => "true"
     autogenerate_column_names => "true"

     add_field => { "entryname" => "%{entryType}" }
     add_field => { "revised_entry_type" => "" }
  }

  ##############################

  # Replaces non-ASCII characters with an ASCII approximation, or if none exists, a replacement character which defaults to ?
  i18n { transliterate => [ "RowType", "Status", "Syncerrors", "From", "To", "Advertiser", "Engine", "Account", "Campaign"," DMARegionname", "DMAregionID", "Clicks", "Cost" ] }

  #############################

  # Create consistent hashes (fingerprints) of one or more fields and store the result in a new field.
  fingerprint { method => "SHA1" key => "MySecretKeyForMyEyesOnlyOk?" source => "DMAregionID" target => "DMAregionID" }

  #############################

  mutate { gsub => [ "landingURL", "[\\?#=]", "" ] }
  mutate { gsub => [ "landingURL", "\"", "" ] }
  mutate {
    gsub => [ "entryname", "1", "Direct Traffic" ]
    gsub => [ "entryname", "2", "Clickthrough" ]
    gsub => [ "entryname", "3", "OLA Impression" ]
    gsub => [ "entryname", "4", "OLA Visit" ]
    gsub => [ "entryname", "5", "Referral Traffic" ]
    gsub => [ "entryname", "6", "Email" ]
    gsub => [ "entryname", "7", "Organic Search" ]
    gsub => [ "entryname", "8", "Paid Search" ]
    gsub => [ "entryname", "9", "Offline Driver" ]
    gsub => [ "entryname", "10", "Social" ]
    gsub => [ "entryname", "11", "Key Action" ]
    gsub => [ "entryname", "12", "Coreg" ]
    gsub => [ "entryname", "13", "Customer Center" ]
    gsub => [ "entryname", "14", "Video" ]
    gsub => [ "entryname", "15", "Social Impression" ]
    gsub => [ "entryname", "16", "Offsite Key Action" ]
    gsub => [ "entryname", "17", "Offsite Clickthrough" ]
  }

  if ("Email" in [utm_source] or "Email" in [utm_medium] or "Email" in [utm_campaign] or "Email" in [utm_term] or "Email" in [utm_content] or "Email" in [utm_brand]) or ("Enewsletter" in [utm_source] or "Enewsletter" in [utm_medium] or "Enewsletter" in [utm_campaign] or "Enewsletter" in [utm_term] or "Enewsletter" in [utm_content] or "Enewsletter" in [utm_brand]) or "eNL" in [utm_source] or "eNL" in [utm_medium] or "eNL" in [utm_campaign] or "eNL" in [utm_term] or "eNL" in [utm_content] or "eNL" in [utm_brand] {
  mutate { replace => {"revised_entry_type" => "Email"} }
  }

  mutate { lowercase => [ "id","createdDate","landingURL","landingURLNoQuery" ] }
}

####################### OUTPUT ###########################
# An output sends event data to a particular
# destination. Outputs are the final stage in the
# event pipeline.
##########################################################

output {
   csv {
     fields =>  [ "id","createdDate","landingURL","landingURLNoQuery", "entryname", "revised_entry_type", "utm_source" ]
     path => "/data/foo2.csv"
     codec => plain { charset => 'UTF-8' }
   }
}
